generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  USER
}

enum MainCategory {
  WANITA
  PRIA
  ANAK
  SEPATU
  TAS
  SPORTS
}

enum SubCategory {
  // WANITA
  BLOUSE
  DRESS
  ROK
  TUNIK
  OUTER
  HIJAB
  SETELAN_FORMAL

  // PRIA
  KAOS
  KEMEJA
  CELANA
  JAKET
  BATIK
  SWEATER

  // ANAK
  BAJU_ANAK
  SETELAN_ANAK
  KAOS_ANAK
  CELANA_ANAK

  // SEPATU
  SEPATU_PRIA
  SEPATU_WANITA
  SNEAKERS
  SEPATU_ANAK
  SEPATU_OLAHRAGA

  // TAS
  TAS_PRIA
  TAS_WANITA
  RANSEL
  SELEMPANG

  // SPORTS
  JERSEY
  TRAINING
  LEGGING
  SPORT_BRA
  CELANA_OLAHRAGA
}

enum Payment {
  CASH
  QRIS
}

enum Status {
  NEW
  PAID
  DONE
}

model User {
  id              Int      @id @default(autoincrement())
  uuid            String   @unique @default("")
  name            String   @default("")
  email           String   @unique @default("")
  password        String   @default("")
  profile_picture String   @default("")
  role            Role     @default(USER)
  alamat          String   @default("")
  telephone       String   @default("")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  Order Order[]
}

model Product {
  id           Int          @id @default(autoincrement())
  uuid         String       @unique @default(uuid())
  name         String       @default("")
  price        Int          @default(0)
  mainCategory MainCategory
  subCategory  SubCategory
  picture      String       @default("")
  description  String       @db.Text
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  orderLists OrderList[]
}

model Order {
  id             Int         @id @default(autoincrement())
  uuid           String      @unique @default("")
  customer       String      @default("")
  total_price    Int         @default(0)
  payment_method Payment     @default(CASH)
  alamat         String      @default("")
  status         Status      @default(NEW)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  orderLists     OrderList[]
  User           User?       @relation(fields: [userId], references: [id])
  userId         Int?
}

model OrderList {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid())
  quantity  Int      @default(0)
  note      String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?

  Order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?
}
